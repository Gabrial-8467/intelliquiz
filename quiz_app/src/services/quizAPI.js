// src/services/quizAPI.js

const API_KEY = 'AIzaSyDY3YLEjUaQXxALgjvIpnOlVYM0hlRuRc4';
const GEMINI_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${API_KEY}`;

// Existing function to get questions generated by Gemini AI
export const getQuizQuestions = async (topic) => {
  const prompt = `
    Generate 10 multiple choice questions on the topic "${topic}".
    Each question should include:
    - a question string
    - 4 options (as an array)
    - a correct answer

    Format the response exactly like this JSON:
    [
      {
        "question": "What is AI?",
        "options": ["Option A", "Option B", "Option C", "Option D"],
        "answer": "Option B"
      }
    ]
  `;

  try {
    const response = await fetch(GEMINI_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        contents: [
          {
            parts: [{ text: prompt }]
          }
        ]
      }),
    });

    const data = await response.json();

    const text = data?.candidates?.[0]?.content?.parts?.[0]?.text;

    if (!text) {
      console.error('Gemini response missing text:', data);
      return [];
    }

    const cleanedText = text.replace(/```json|```/g, '').trim();

    try {
      const questions = JSON.parse(cleanedText);
      return questions;
    } catch (error) {
      console.error('Error parsing the response into JSON:', error);
      return [];
    }

  } catch (error) {
    console.error('Error fetching quiz from Gemini:', error);
    return [];
  }
};

// New function to fetch quiz by UUID from your backend
export const getQuizByUUID = async (uuid) => {
  try {
    const response = await fetch(`http://localhost:5000/api/quiz/shared/${uuid}`);
    if (!response.ok) {
      throw new Error('Failed to fetch quiz by UUID');
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Error fetching quiz by UUID:', error);
    return null;
  }
};
